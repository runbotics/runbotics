const excelActionsTranslations = {
    'Process.Details.Modeler.Actions.Excel.Row': 'Row',
    'Process.Details.Modeler.Actions.Excel.Column': 'Column',
    'Process.Details.Modeler.Actions.Excel.StartRow': 'Start row',
    'Process.Details.Modeler.Actions.Excel.StartColumn': 'Start column',
    'Process.Details.Modeler.Actions.Excel.EndRow': 'End row',
    'Process.Details.Modeler.Actions.Excel.TargetCell': 'Target cell',
    'Process.Details.Modeler.Actions.Excel.EndColumn': 'End column',
    'Process.Details.Modeler.Actions.Excel.StartCell': 'Start cell',
    'Process.Details.Modeler.Actions.Excel.EndCell': 'End cell',
    'Process.Details.Modeler.Actions.Excel.Worksheet': 'Worksheet',
    'Process.Details.Modeler.Actions.Excel.Worksheet.Info': 'Target sheet name. Default active sheet.',
    'Process.Details.Modeler.Actions.Excel.Open.Label': 'Open',
    'Process.Details.Modeler.Actions.Excel.Open.Path.Title': 'Path / Workbook',
    'Process.Details.Modeler.Actions.Excel.Open.Worksheet.Title': 'Worksheet',
    'Process.Details.Modeler.Actions.Excel.GetCell.Label': 'Get cell',
    'Process.Details.Modeler.Actions.Excel.GetCell.Output.VariableName.Info': 'Assign found cell value to variable',
    'Process.Details.Modeler.Actions.Excel.GetCell.TargetCell.Info': 'Cell to read, e.g. "A1".',
    'Process.Details.Modeler.Actions.Excel.GetCells.Label': 'Get cells',
    'Process.Details.Modeler.Actions.Excel.GetCells.Output.VariableName.Info': 'Assign list of lists of found cells\' values to variable',
    'Process.Details.Modeler.Actions.Excel.GetCells.StartCell.Info': 'The start cell for selection, e.g. "D3".',
    'Process.Details.Modeler.Actions.Excel.GetCells.EndCell.Info': 'The end cell for selection, e.g. "H8".',
    'Process.Details.Modeler.Actions.Excel.SetCell.Label': 'Set cell',
    'Process.Details.Modeler.Actions.Excel.SetCell.TargetCell.Info': 'Cell to set, e.g. "A1".',
    'Process.Details.Modeler.Actions.Excel.SetCell.Value.Info': 'Value to set - boolean, number or string (variable), e.g. true, 150, "myValue", #{myValue}.',
    'Process.Details.Modeler.Actions.Excel.SetCells.Label': 'Set cells',
    'Process.Details.Modeler.Actions.Excel.SetCells.CellValues': 'Values to set',
    'Process.Details.Modeler.Actions.Excel.SetCells.CellValues.Info': 'Array of rows, where each row is array of values to set, e.g. [["C3", "D3", "E3"], ["C4", "D4", "E4"]]. If value is "", cell won\'t be changed. If it\'s null/undefined it will clear cell.',
    'Process.Details.Modeler.Actions.Excel.SetCells.StartColumn.Info': 'The column from which the value insertion begins. Default is A.',
    'Process.Details.Modeler.Actions.Excel.SetCells.StartRow.Info': 'The row from which the value insertion begins. Default is 1.',
    'Process.Details.Modeler.Actions.Excel.FindFirstEmptyRow.Label': 'Find first empty row',
    'Process.Details.Modeler.Actions.Excel.FindFirstEmptyRow.StartCell.Info': 'Starting cell for search, e.g. "A1".',
    'Process.Details.Modeler.Actions.Excel.FindFirstEmptyRow.Output.VariableName.Info': 'Assign found row number to variable',
    'Process.Details.Modeler.Actions.Excel.ClearCells.Label': 'Clear cells',
    'Process.Details.Modeler.Actions.Excel.ClearCells.TargetCells': 'Cell range',
    'Process.Details.Modeler.Actions.Excel.ClearCells.TargetCells.Info': 'Cells to clear, e.g. F2, A1:C3 or ["A1", "B2", "E5"].',
    'Process.Details.Modeler.Actions.Excel.DeleteColumns.Label': 'Delete columns',
    'Process.Details.Modeler.Actions.Excel.DeleteColumns.ColumnRange': 'Column range',
    'Process.Details.Modeler.Actions.Excel.DeleteColumns.ColumnRange.Info': 'Column, column range or array e.g. "G", "C:F" or ["C", "E", "H"].',
    'Process.Details.Modeler.Actions.Excel.CreateWorksheet.Label': 'Create worksheet',
    'Process.Details.Modeler.Actions.Excel.CreateWorksheet.Name': 'Name',
    'Process.Details.Modeler.Actions.Excel.CreateWorksheet.Name.Info': 'The newly created sheet will become the active sheet',
    'Process.Details.Modeler.Actions.Excel.CreateWorksheet.Output.VariableName.Info': 'Assign new worksheet name to variable',
    'Process.Details.Modeler.Actions.Excel.RenameWorksheet.Label': 'Rename worksheet',
    'Process.Details.Modeler.Actions.Excel.RenameWorksheet.NewName': 'New name',
    'Process.Details.Modeler.Actions.Excel.RenameWorksheet.Worksheet.Info': 'Leaving the field empty will change the name of active worksheet',
    'Process.Details.Modeler.Actions.Excel.DeleteWorksheet.Label': 'Delete Worksheet',
    'Process.Details.Modeler.Actions.Excel.ReadTable.Label': 'Read table',
    'Process.Details.Modeler.Actions.Excel.ReadTable.Table': 'Name',
    'Process.Details.Modeler.Actions.Excel.ReadTable.Table.Info': 'Table name, e.g. "Table1".',
    'Process.Details.Modeler.Actions.Excel.ReadTable.ShouldIncludeHeaders': 'Include headers',
    'Process.Details.Modeler.Actions.Excel.ReadTable.ShouldIncludeHeaders.Info': 'Return not only table data, but also it\'s headers.',
    'Process.Details.Modeler.Actions.Excel.WorksheetExists.Label': 'Check if worksheet exists',
    'Process.Details.Modeler.Actions.Excel.WorksheetExists.Worksheet.Info': 'Worksheet name to check.',
    'Process.Details.Modeler.Actions.Excel.WorksheetExists.Output.VariableName.Info': 'Assign result (true/false) of check to variable',
    'Process.Details.Modeler.Actions.Excel.SetActiveWorksheet.Label': 'Set active worksheet',
    'Process.Details.Modeler.Actions.Excel.InsertColumnsBefore.Label': 'Insert columns before',
    'Process.Details.Modeler.Actions.Excel.InsertColumnsAfter.Label': 'Insert columns after',
    'Process.Details.Modeler.Actions.Excel.InsertColumns.ColumnsAmount': 'Amount of columns',
    'Process.Details.Modeler.Actions.Excel.InsertColumns.Column.Info': 'Column letter, e.g. "AZ".',
    'Process.Details.Modeler.Actions.Excel.InsertColumns.Amount.Info': 'Number of columns to insert.',
    'Process.Details.Modeler.Actions.Excel.InsertRowsBefore.Label': 'Insert rows before',
    'Process.Details.Modeler.Actions.Excel.InsertRowsAfter.Label': 'Insert rows after',
    'Process.Details.Modeler.Actions.Excel.InsertRows.RowsNumber': 'Number of rows',
    'Process.Details.Modeler.Actions.Excel.InsertRows.Row.Info': 'Starting row number, e.g. 5',
    'Process.Details.Modeler.Actions.Excel.InsertRows.RowsNumber.Info': 'Number of rows to insert, e.g. 3.',
    'Process.Details.Modeler.Actions.Excel.Save.Label': 'Save',
    'Process.Details.Modeler.Actions.Excel.Save.FileName.Title': 'File name',
    'Process.Details.Modeler.Actions.Excel.Close.Label': 'Close',
};

export default excelActionsTranslations;
