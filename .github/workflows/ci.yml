name: CI

on:
  pull_request:
    branches: ["develop", "master"]
  workflow_dispatch:

env:
  RUSH: node ../common/scripts/install-run-rush.js
  NODE_VERSION: 14.x

jobs:
  changes-detection:
    runs-on: ubuntu-latest

    outputs:
      ui: ${{ steps.filter.outputs.ui }}
      scheduler: ${{ steps.filter.outputs.scheduler }}
      bot: ${{ steps.filter.outputs.bot }}
      api: ${{ steps.filter.outputs.api }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Assign paths to scenarios
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            ui:
              - 'runbotics/runbotics-orchestrator-ui/**'
              - 'runbotics/runbotics-common/**'
            scheduler:
              - 'runbotics/runbotics-scheduler/**'
              - 'runbotics/runbotics-common/**'
            bot:
              - 'runbotics/runbotics-desktop/**'
              - 'runbotics/runbotics-common/**'
              - 'runbotics/runbotics-actions-windows/**'
              - 'runbotics/runbotics-sdk/**'
            api:
              - 'runbotics-orchestrator/**'



  build-ui:
    needs: changes-detection
    # if: |
    #   github.ref == 'refs/heads/develop'
    #   || github.ref == 'refs/heads/master'
    #   || needs.changes-detection.outputs.ui == 'true'

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./runbotics/runbotics-orchestrator-ui

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Rush
        id: cache-rush
        uses: actions/cache@v3
        env:
          CACHE_NAME: cache-rush
        with:
          path: ~/.rush
          key: ${{ runner.os }}-ui-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/rush.json') }}
          restore-keys: |
            ${{ runner.os }}-ui-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/rush.json') }}
            ${{ runner.os }}-ui-${{ env.CACHE_NAME }}-

      - name: Cache pnpm
        id: cache-pnpm
        uses: actions/cache@v3
        env:
          CACHE_NAME: cache-pnpm
        with:
          path: runbotics/common/temp/pnpm-store
          key: |
            ${{ runner.os }}-ui-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/common/config/rush/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-ui-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/common/config/rush/pnpm-lock.yaml') }}
            ${{ runner.os }}-ui-${{ env.CACHE_NAME }}-

      - name: Cache Next.js
        id: cache-next
        uses: actions/cache@v3
        env:
          CACHE_NAME: cache-next
        with:
          path: runbotics/runbotics-orchestrator-ui/.next/cache
          key: |
            ${{ runner.os }}-ui-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/common/config/rush/pnpm-lock.yaml') }}-${{ hashFiles('runbotics/runbotics-orchestrator-ui/**.[jt]s', 'runbotics/runbotics-orchestrator-ui/**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-ui-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/common/config/rush/pnpm-lock.yaml') }}-

      - name: Install Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: $RUSH install -t .

      - name: Build
        run: $RUSH rebuild -t . --verbose



  build-scheduler:
    needs: changes-detection
    # if: |
    #   github.ref == 'refs/heads/develop'
    #   || github.ref == 'refs/heads/master'
    #   || needs.changes-detection.outputs.scheduler == 'true'

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./runbotics/runbotics-scheduler

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Rush
        id: cache-rush
        uses: actions/cache@v3
        env:
          CACHE_NAME: cache-rush
        with:
          path: ~/.rush
          key: ${{ runner.os }}-scheduler-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/rush.json') }}
          restore-keys: |
            ${{ runner.os }}-scheduler-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/rush.json') }}
            ${{ runner.os }}-scheduler-${{ env.CACHE_NAME }}-

      - name: Cache pnpm
        id: cache-pnpm
        uses: actions/cache@v3
        env:
          CACHE_NAME: cache-pnpm
        with:
          path: runbotics/common/temp/pnpm-store
          key: |
            ${{ runner.os }}-scheduler-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/common/config/rush/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-scheduler-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/common/config/rush/pnpm-lock.yaml') }}
            ${{ runner.os }}-scheduler-${{ env.CACHE_NAME }}-

      - name: Install Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: $RUSH install -t .

      - name: Build
        run: $RUSH rebuild -t . --verbose



  build-bot:
    needs: changes-detection
    # if: |
    #    github.ref == 'refs/heads/develop'
    #    || github.ref == 'refs/heads/master'
    #    || needs.changes-detection.outputs.bot == 'true'

    runs-on: windows-latest

    defaults:
      run:
        working-directory: ./runbotics/runbotics-desktop

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Rush
        id: cache-rush
        uses: actions/cache@v3
        env:
          CACHE_NAME: cache-rush
        with:
          path: ~/.rush
          key: ${{ runner.os }}-bot-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/rush.json') }}
          restore-keys: |
            ${{ runner.os }}-bot-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/rush.json') }}
            ${{ runner.os }}-bot-${{ env.CACHE_NAME }}-

      - name: Cache pnpm
        id: cache-pnpm
        uses: actions/cache@v3
        env:
          CACHE_NAME: cache-pnpm
        with:
          path: runbotics/common/temp/pnpm-store
          key: |
            ${{ runner.os }}-bot-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/common/config/rush/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-bot-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics/common/config/rush/pnpm-lock.yaml') }}
            ${{ runner.os }}-bot-${{ env.CACHE_NAME }}-

      - name: Install Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Choco install build tools
        run: choco install visualcpp-build-tools -y

      - name: Set npm config VS version
        run: npm config set msvs_version 2017

      - name: Install dependencies
        run: ${{ env.RUSH }} install -t .

      - name: Build
        run: ${{ env.RUSH }} rebuild -t . --verbose



  build-api:
    needs: changes-detection
    # if: |
    #   github.ref == 'refs/heads/develop'
    #   || github.ref == 'refs/heads/master'
    #   || needs.changes-detection.outputs.api == 'true'

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./runbotics-orchestrator

    env:
      JAVA_VERSION: 11
      JAVA_DISTRIBUTION: 'adopt'
      GRADLE_VERSION: '6.8.3'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Java ${{ env.JAVA_VERSION }} JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: gradle

      - name: Cache NPM dependencies
        id: cache-npm
        uses: actions/cache@v3
        env:
          CACHE_NAME: cache-npm
        with:
          path: ~/.npm
          key: |
            ${{ runner.os }}-api-${{ env.CACHE_NAME }}-${{ hashFiles('runbotics-orchestrator/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-api-${{ env.CACHE_NAME }}-

      - name: Build
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test -x integrationTest -x compileTestJava
