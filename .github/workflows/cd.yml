name: CD

on:
  push:
    branches: ["develop", "master"]
  workflow_dispatch:

jobs:
  push-ui:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./runbotics/runbotics-orchestrator-ui

    strategy:
      matrix:
        node-version: ['14.x']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build
        run: |
          git update-index--chmod=+x build.sh
          ./build.sh

      - name: Push
        run: |
          cd ../common/deploy/runbotics-orchestrator-ui
          git update-index--chmod=+x publish.sh
          ./publish.sh



  push-scheduler:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./runbotics/runbotics-scheduler

    strategy:
      matrix:
        node-version: ['14.x']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build
        run: |
          git update-index--chmod=+x build.sh
          ./build.sh

      - name: Push
        run: |
          cd ../common/deploy/runbotics-scheduler
          git update-index--chmod=+x publish.sh
          ./publish.sh



  push-bot:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./runbotics/runbotics-desktop

    strategy:
      matrix:
        node-version: ['14.x'] 

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build
        run: |
          git update-index--chmod=+x build.sh
          ./build.sh

      - name: Push
        run: |
          cd ../common/deploy/runbotics-desktop
          git update-index--chmod=+x publish.sh
          ./publish.sh



  push-api:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./runbotics-orchestrator

    strategy:
      matrix:
        java-version: [11]
        java-distribution: ['adopt']
        gradle-version: ['6.8.3']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Install Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.java-distribution }}

      - name: Install gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ matrix.gradle-version }}

      - name: Build
        run: gradle bootJar -Pprod jibDockerBuild

      - name: Push
        run: |
          git update-index--chmod=+x publish.sh
          ./publish.sh
